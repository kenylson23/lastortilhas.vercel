#!/usr/bin/env node
/**
 * Validador Simples de Arquivos de Implanta√ß√£o - Las Tortilhas
 */

import fs from 'fs';

console.log('üîç Validando arquivos de implanta√ß√£o...');

const checks = [];

// Verificar arquivos obrigat√≥rios
const requiredFiles = [
  'vercel.json',
  'api/index.mjs',
  'api/package.json',
  '.vercelignore',
  'next.config.js',
  'scripts/build-vercel-complete.js'
];

for (const file of requiredFiles) {
  if (fs.existsSync(file)) {
    checks.push({ file, status: '‚úÖ', message: 'Presente' });
  } else {
    checks.push({ file, status: '‚ùå', message: 'Ausente' });
  }
}

// Verificar conte√∫do do vercel.json
if (fs.existsSync('vercel.json')) {
  try {
    const vercelConfig = JSON.parse(fs.readFileSync('vercel.json', 'utf8'));
    
    if (vercelConfig.version === 2) {
      checks.push({ file: 'vercel.json', status: '‚úÖ', message: 'Vers√£o 2 configurada' });
    } else {
      checks.push({ file: 'vercel.json', status: '‚ö†Ô∏è', message: 'Vers√£o incorreta' });
    }
    
    if (vercelConfig.functions) {
      checks.push({ file: 'vercel.json', status: '‚úÖ', message: 'Functions configuradas' });
    } else {
      checks.push({ file: 'vercel.json', status: '‚ö†Ô∏è', message: 'Functions n√£o configuradas' });
    }
    
  } catch (error) {
    checks.push({ file: 'vercel.json', status: '‚ùå', message: 'JSON inv√°lido' });
  }
}

// Verificar API package.json
if (fs.existsSync('api/package.json')) {
  try {
    const apiPackage = JSON.parse(fs.readFileSync('api/package.json', 'utf8'));
    
    if (apiPackage.type === 'module') {
      checks.push({ file: 'api/package.json', status: '‚úÖ', message: 'ES modules configurado' });
    } else {
      checks.push({ file: 'api/package.json', status: '‚ö†Ô∏è', message: 'ES modules n√£o configurado' });
    }
    
  } catch (error) {
    checks.push({ file: 'api/package.json', status: '‚ùå', message: 'JSON inv√°lido' });
  }
}

// Mostrar resultados
console.log('\nüìã Resultado da Valida√ß√£o:\n');

let hasErrors = false;
let hasWarnings = false;

for (const check of checks) {
  console.log(`${check.status} ${check.file} - ${check.message}`);
  
  if (check.status === '‚ùå') {
    hasErrors = true;
  } else if (check.status === '‚ö†Ô∏è') {
    hasWarnings = true;
  }
}

console.log('\nüìä Resumo:');

if (hasErrors) {
  console.log('‚ùå Erros encontrados - Corrija antes do deploy');
  process.exit(1);
} else if (hasWarnings) {
  console.log('‚ö†Ô∏è Avisos encontrados - Revise configura√ß√µes');
} else {
  console.log('‚úÖ Todos os arquivos de implanta√ß√£o est√£o corretos!');
}

console.log('\nüöÄ Pr√≥ximos passos para deploy:');
console.log('1. Configure vari√°veis de ambiente no Vercel');
console.log('2. Execute: vercel --prod');
console.log('3. Teste: curl https://suas-url.vercel.app/api/health');

console.log('\nüìö Documenta√ß√£o completa: DEPLOYMENT_COMPLETE_2025.md');